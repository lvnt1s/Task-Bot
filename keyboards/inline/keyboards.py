from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton

async def show_tasks(user_tasks: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    keyboard = []

    for item in user_tasks:
        keyboard.append([InlineKeyboardButton(f"{'‚úÖ' if item.is_complited else '‚è≥'} {item.title}", callback_data=f'show_task|{item.id}')])

    keyboard.append([InlineKeyboardButton('‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É', callback_data='create_task')])
    return InlineKeyboardMarkup(keyboard)

async def cancel_create() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è."""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel_create')]
    ])

async def manage_task(task_id: int, status: bool) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏."""
    buttons = []

    if not status:
        buttons.append(InlineKeyboardButton('‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å', callback_data=f'finish_task|{task_id}'))

    buttons.append(InlineKeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_task|{task_id}'))

    return InlineKeyboardMarkup([
        buttons, 
        [InlineKeyboardButton('‚óÄÔ∏è –ù–∞–∑–∞–¥ ', callback_data='cancel_create')]
    ])

